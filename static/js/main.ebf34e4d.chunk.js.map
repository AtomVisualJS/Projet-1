{"version":3,"sources":["image/phpHYXeSS_1.jpg","app/Header.js","templates/Naviguation.js","App.js","api/url.js","api/GET/postsGet.js","templates/Home.js","templates/Details.js","templates/NewPosts.js","templates/TempImg.js","routes.js","features/slice/postSlice.js","api/GET/getInfos.js","features/slice/infosSlice.js","features/store.js","serviceWorker.js","index.js"],"names":["Header","className","style","backgroundColor","href","Chip","avatar","Avatar","alt","src","ImgLogo","label","variant","type","id","to","placeholder","Naviguation","Component","App","axios","create","baseURL","GetAllPosts","createAsyncThunk","a","api","get","response","data","Home","dispatch","useDispatch","useEffect","renderedPosts","useSelector","state","posts","map","post","title","img","width","Details","props","match","params","details","loading","console","log","setState","this","body","NewPosts","name","description","files","handleNameChange","bind","handleFilesChange","handleDescriptionChange","handleSubmit","event","target","value","preventDefault","formData","FormData","append","headers","then","res","catch","err","onSubmit","htmlFor","onChange","rows","TempImg","textAlign","file","_id","Routing","exact","path","render","Fragment","component","postSlice","createSlice","initialState","error","extraReducers","pending","action","status","fulfilled","payload","rejected","GetAllInfos","infosSlice","infos","message","store","configureStore","reducer","postsReducer","infosReducer","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ebf34e4d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/phpHYXeSS_1.06b3a660.jpg\";","import { Chip, Avatar} from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport \"../css/app.css\";\nimport ImgLogo from \"../image/phpHYXeSS_1.jpg\";\n\nconst Header = () => {\n  return (\n    <nav\n      className=\"navbar navbar-expand-md navbar-dark fixed-top\"\n      style={{ backgroundColor: \"lightslategrey\" }}\n    >\n      <div className=\"container-fluid\">\n        <a className=\"navbar-brand\" href=\"/\">\n          <Chip\n            avatar={<Avatar alt=\"Mathieu\" src={ImgLogo} />}\n            label=\"Mathieu\"\n            variant=\"outlined\"\n          />\n        </a>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-bs-toggle=\"collapse\"\n          data-bs-target=\"#navbarCollapse\"\n          aria-controls=\"navbarCollapse\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n          <ul className=\"navbar-nav me-auto mb-2 mb-md-0\">\n            <li className=\"nav-item\">\n              <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\n                Home\n              </Link>\n            </li> \n            <li className=\"nav-item\">\n              <Link className=\"nav-link\" to=\"/images\">\n                Images\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link className=\"nav-link\" to=\"/newposts\">\n                New Images\n              </Link>\n            </li>\n           \n          </ul>\n          <form className=\"d-flex\">\n            <input\n              className=\"form-control me-2\"\n              type=\"search\"\n              placeholder=\"Search\"\n              aria-label=\"Search\"\n            />\n            <button className=\"btn btn-outline-success\" type=\"submit\">\n              Search\n            </button>\n          </form>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport Header from \"../app/Header\";\n\nclass Naviguation extends Component {\n  render() {\n    return (\n      <div>\n        <Header />\n        <br />\n        <br />\n        <br />\n      </div>\n    );\n  }\n}\n\nexport default Naviguation;\n","import React from \"react\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport \"../node_modules/bootstrap/dist/js/bootstrap.bundle.min\";\nimport Naviguation from \"./templates/Naviguation\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Naviguation />\n    </div>\n  );\n}\n\nexport default App;\n","\n\nimport axios from 'axios';\n\nexport default axios.create({\n    baseURL: 'http://localhost:5000/api/',\n});\n\n\n\n\n\n\n\n\n\n","\nimport api from \"../url\"\nimport { createAsyncThunk } from \"@reduxjs/toolkit\"\n\nexport const GetAllPosts = createAsyncThunk(\"posts/getAll\", async () => {\n    const response = await api.get(\"/posts\")\n    return response.data\n})\n\nexport const GetPostById = createAsyncThunk(\"posts/getById\", async (id) => {\n    const response = await api.get(`/posts/${id}`)\n    return response.data\n})\n\n\n\n","import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { GetAllPosts } from \"../api/GET/postsGet\";\nimport \"../css/home.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst Home = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(GetAllPosts());\n  }, [dispatch]);\n\n  const posts = useSelector((state) => state.posts.posts);\n\n  const renderedPosts = posts.map((post) => {\n    return (\n      <div key={post.id} className=\"box\">\n        <div className=\"card\">\n          <br />\n          <h1>{post.title}</h1>\n          <img src={post.img} alt=\"post\" width=\"20%\" />\n          <Link to={`/posts/${post.id}`}>Voir plus</Link>\n        </div>\n      </div>\n    );\n  });\n\n  return (\n    <div>\n      <h1>Home</h1>\n\n      {renderedPosts}\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { Component } from \"react\";\nimport api from \"../api/url\"\n\nclass Details extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      id: this.props.match.params.id,\n      details: [],\n      loading: true,\n    };\n console.log(this.props.match.params.id);\n  }\n\n\n\n  componentDidMount() {\n    (async () => {\n      const details = await api.get(`/post/${this.props.match.params.id}`);\n      this.setState({ details: details.data, loading: false });\n    }\n    )();\n  }\n\n\n  \n\n  render() {\n    return (\n      <div>\n        {this.state.loading ? (\n          <div>Loading...</div>\n        ) : (\n          <div key={this.state.details.id}>\n            <h1>{this.state.details.title}</h1>\n            <p>{this.state.details.body}</p>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Details;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\n\n\n\nclass NewPosts extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      description: \"\", \n      files: \"\",\n    };\n\n    this.handleNameChange = this.handleNameChange.bind(this);\n    this.handleFilesChange = this.handleFilesChange.bind(this);\n    this.handleDescriptionChange = this.handleDescriptionChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleNameChange(event) {\n    this.setState({ name: event.target.value });\n  }\n\n  handleFilesChange(event) {\n    this.setState({ files: event.target.files[0] });\n  }\n\n  handleDescriptionChange(event) {\n    this.setState({ description: event.target.value });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const formData = new FormData();\n    formData.append(\"name\", this.state.name);\n    formData.append(\"files\", this.state.files);\n    formData.append(\"description\", this.state.description);\n    const config = {\n        headers: {\n            'content-type': 'multipart/form-data'\n        }\n    };\n    axios.post(\"http://localhost:5000/api/upload\", formData, config)\n        .then(res => {\n            console.log(res);\n            console.log(res.data);\n        })\n        .catch(err => {\n            console.log(err);\n        });\n    }\n    \n\n  render() {\n    return (\n      <div className=\"container\">\n        <br />$$\n        <h2>New Post</h2>\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"form-group\">\n            <label htmlFor=\"name\">Name</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"name\"\n              aria-describedby=\"nameHelp\"\n              placeholder=\"Enter name\"\n              onChange={this.handleNameChange}\n            />\n          \n          </div>\n          \n          <div className=\"form-group\">\n            <label htmlFor=\"description\">Description</label>\n            <textarea\n              className=\"form-control\"\n              id=\"description\"\n              rows=\"3\"\n              onChange={this.handleDescriptionChange}\n            ></textarea>\n          </div>\n          <br />\n          <div className=\"form-group\">\n            <input\n              type=\"file\"\n              className=\"form-control-file\"\n              id=\"files\"\n              onChange={this.handleFilesChange}\n            />\n          </div>\n          <br />\n         <button type=\"submit\" className=\"btn btn-primary\">Uploads</button>\n        </form>\n      </div>\n    );\n  }\n}\n  \n     \n       \n    \n   \n          \n          \n          \n        \n\nexport default NewPosts;\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport \"../css/imgbox.css\";\n\nclass TempImg extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        data: []\n    };\n  }\n  componentDidMount() {\n    axios.get(\"http://localhost:5000/api/upload\").then((res) => {\n      this.setState({\n        data: res.data.posts\n      });\n      console.log(this.state.data);\n    });\n  }\n\n  render() {\n    return (\n        <div>\n            <h1 style={{textAlign:\"center\"}}>Images</h1>\n            {this.state.data.map(data => (\n                <div className=\"imgBox\" key={data._id}>\n                    <h1>{data.name}</h1>\n                    <img src={data.file} alt=\"\" width=\"100%\" className=\"firstImg\"/>  \n                    <p>{data.description}</p>\n                </div>  \n            ))}\n      \n\n        </div>\n       \n    );\n  }\n}\n\nexport default TempImg;\n","import React, { Component } from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\n\nimport Home from './templates/Home';\nimport Details from './templates/Details';\nimport NewPosts from './templates/NewPosts';\nimport TempImg from \"./templates/TempImg\";\n\nclass Routing extends Component {\n  render() {\n    return (\n      <div>\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            render={() => \n            <React.Fragment>\n              <Home />\n            </React.Fragment>}\n          />\n          <Route exact path=\"/newposts\" component={NewPosts} />\n          <Route exact path=\"/images\" component={TempImg} />\n          <Route exact path=\"/posts/:id\" component={Details} />\n          <Redirect to=\"/\" />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default Routing;\n","\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport { GetAllPosts} from \"../../api/GET/postsGet\"\n\n\n\nconst postSlice = createSlice({\n    name: \"post\",\n    initialState: {\n        posts: [],\n        loading: false,\n        error: null,\n    },\n    extraReducers: {\n        [GetAllPosts.pending]: (state, action) => {\n            state.status = \"loading\";\n        },\n        [GetAllPosts.fulfilled]: (state, action) => {\n            state.posts = action.payload;\n            state.status = \"succeeded\";\n        },\n        [GetAllPosts.rejected]: (state, action) => {\n            state.error = action.error;\n            state.status = \"failed\";\n        },\n       \n    },\n  \n});\n\nexport default postSlice.reducer;","import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport api from \"../url\";\n\nexport const GetAllInfos = createAsyncThunk(\"infos/getAll\", async () => {\n  const response = await api.get(\"/infos\");\n  return response.data;\n});\n","\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport { GetAllInfos } from \"../../api/GET/getInfos\";\n\nconst infosSlice = createSlice({\n    name: \"infos\",\n    initialState: {\n        infos: [],\n        loading: false,\n        error: null,\n    },\n    extraReducers: {\n        [GetAllInfos.pending]: (state, action) => {\n            state.status = \"loading\";\n        },\n        [GetAllInfos.fulfilled]: (state, action) => {\n            state.status = \"succeeded\";\n            state.infos = action.payload;\n        },\n        [GetAllInfos.rejected]: (state, action) => {\n            state.status = \"failed\";\n            state.error = action.error.message;\n        },\n    },\n});\n\nexport default infosSlice.reducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport postsReducer from './slice/postSlice';\nimport infosReducer from './slice/infosSlice';\n\n\nexport const store = configureStore({\n    reducer: {\n        posts: postsReducer, \n        infos: infosReducer,\n    }\n});\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport  Routing  from \"./routes\"\nimport { store } from \"./features/store\";\nimport { Provider } from \"react-redux\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n          <App />\n          <Routing/>\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}